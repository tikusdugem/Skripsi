/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Transaksi;

import Koneksi.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rothem
 */
public class Retur extends javax.swing.JFrame {
    
    DefaultTableModel model,modelRetur;

    /**
     * Creates new form Retur
     */
    public Retur() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Logo/LogoDNetHouse.png")).getImage());
        setLocationRelativeTo(null);
        setJTable();
        modelRetur();
        dateNow();
        generateRetur();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tFaktur = new javax.swing.JTable();
        txtCariNoFaktur = new javax.swing.JTextField();
        bSearch = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtBarangRetur = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNoRetur = new javax.swing.JTextField();
        bRetur = new javax.swing.JButton();
        bGenerate = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtNote = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        tRetur = new javax.swing.JTable();
        cNamaBarang = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        bSimpanKeranjang = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Retur | Sistem Informasi Penjualan D-Net House");

        jLabel1.setText("Cari No Faktur");

        tFaktur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tFaktur);

        bSearch.setText("Cari");
        bSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSearchActionPerformed(evt);
            }
        });

        jLabel2.setText("Jumlah Barang Retur");

        txtBarangRetur.setEnabled(false);

        jLabel3.setText("No Retur");

        txtNoRetur.setEnabled(false);

        bRetur.setText("Retur");
        bRetur.setEnabled(false);
        bRetur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReturActionPerformed(evt);
            }
        });

        bGenerate.setText("Tambah Transaksi");
        bGenerate.setEnabled(false);
        bGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateActionPerformed(evt);
            }
        });

        bCancel.setText("Batal");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        jLabel5.setText("Catatan");

        txtNote.setColumns(20);
        txtNote.setRows(5);
        txtNote.setEnabled(false);
        jScrollPane2.setViewportView(txtNote);

        tRetur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tRetur);

        cNamaBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -" }));
        cNamaBarang.setEnabled(false);
        cNamaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNamaBarangActionPerformed(evt);
            }
        });

        jLabel6.setText("Nama Barang");

        bSimpanKeranjang.setText("Simpan Ke Keranjang");
        bSimpanKeranjang.setEnabled(false);
        bSimpanKeranjang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanKeranjangActionPerformed(evt);
            }
        });

        bHapus.setText("Hapus");
        bHapus.setEnabled(false);
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bPrint.setText("Cetak");
        bPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 51, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bSimpanKeranjang)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(bRetur))
                            .addComponent(bHapus))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bCancel)
                            .addComponent(bPrint)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCariNoFaktur, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(bSearch))
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtBarangRetur, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(50, 50, 50))
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNoRetur))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCariNoFaktur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNoRetur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bGenerate)
                    .addComponent(cNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBarangRetur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bHapus)
                            .addComponent(bCancel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bRetur)
                            .addComponent(bSimpanKeranjang)
                            .addComponent(bPrint))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSearchActionPerformed
        cariNoFaktur();
    }//GEN-LAST:event_bSearchActionPerformed

    private void bReturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReturActionPerformed
        detailRetur();
        retur();
        updateStokBarang();
        txtCariNoFaktur.setEnabled(false);
        cNamaBarang.setEnabled(false);
        txtBarangRetur.setEnabled(false);
        txtNote.setEnabled(false);
        bSearch.setEnabled(false);
        modelRetur.getDataVector().removeAllElements();
        modelRetur.fireTableDataChanged();
    }//GEN-LAST:event_bReturActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    private void bSimpanKeranjangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanKeranjangActionPerformed
        simpanKeranjang();
        bHapus.setEnabled(true);
        bRetur.setEnabled(true);
        txtNote.setText("");
        txtBarangRetur.setText("");
    }//GEN-LAST:event_bSimpanKeranjangActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        hapusBarisKeranjang();
    }//GEN-LAST:event_bHapusActionPerformed

    private void cNamaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNamaBarangActionPerformed
        txtBarangRetur.setEnabled(true);
        txtNote.setEnabled(true);
        bSimpanKeranjang.setEnabled(true);
    }//GEN-LAST:event_cNamaBarangActionPerformed

    private void bGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateActionPerformed
        generateRetur();
        txtCariNoFaktur.setText("");
        bGenerate.setEnabled(false);
        txtCariNoFaktur.setEnabled(true);
        bSearch.setEnabled(true);       
        cNamaBarang.removeAllItems();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
    }//GEN-LAST:event_bGenerateActionPerformed

    private void bPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintActionPerformed
        String reportSource;
        Map<String,Object> param = new HashMap<String,Object>();
        param.put("NoRetur",txtNoRetur.getText());
        
            try{
                Connection conn = Koneksi.koneksiDatabase();
                reportSource = System.getProperty("user.dir")+"/src/Laporan/FakturRetur.jrxml";
                JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport,param,conn);
                JasperViewer.viewReport(jasperPrint,false);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,""+e.getMessage());
            }
    }//GEN-LAST:event_bPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Retur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Retur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Retur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Retur.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Retur().setVisible(true);
            }
        });
    }
    
    private void setJTable(){
        
        String [] JudulKolom = {"No Faktur","Product","Type","Total Beli","Total Bayar"};
        model = new DefaultTableModel(null,JudulKolom){
            boolean[] canEdit = new boolean[] {false,false,false,false,false};
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return canEdit[columnIndex];
            }
        };
        tFaktur.setModel(model);
        tFaktur.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tFaktur.getColumnModel().getColumn(0).setPreferredWidth(120);
        tFaktur.getColumnModel().getColumn(1).setPreferredWidth(100);
        tFaktur.getColumnModel().getColumn(2).setPreferredWidth(50);
        tFaktur.getColumnModel().getColumn(3).setPreferredWidth(80);
        tFaktur.getColumnModel().getColumn(4).setPreferredWidth(80);
                
        //getData();
        
    }
    
    public void modelRetur(){
                        
        modelRetur = new DefaultTableModel();
        tRetur.setModel(modelRetur);        
        modelRetur.addColumn("Product");
        modelRetur.addColumn("Type");
        modelRetur.addColumn("Total Beli");        
        modelRetur.addColumn("Total Retur");
        modelRetur.addColumn("Note");
        
    }
    
    public void cariNoFaktur(){
        
        String noFaktur = txtCariNoFaktur.getText();
        
        try{
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "SELECT * FROM DetailPenjualan WHERE NoFaktur = '"+noFaktur+"'";
            PreparedStatement s = conn.prepareStatement(sql);                
            ResultSet r = s.executeQuery();
            
            String NoFaktur,Product,Type,TotalBeli,TotalBayar;
            while(r.next()){
                NoFaktur = r.getString("NoFaktur");
                Product = r.getString("Product");
                Type = r.getString("Type");
                TotalBeli = r.getString("TotalBeli");                
                TotalBayar = r.getString("TotalBayar");
                
            Object[] Data = {NoFaktur,Product,Type,TotalBeli,TotalBayar};
            model.addRow(Data);
            
            }
            
            if(model.getRowCount()>0){
                JOptionPane.showMessageDialog(null,"Data Ditemukan");                
                cNamaBarang.setEnabled(true);
                comboBox();
            }else{
                JOptionPane.showMessageDialog(null,"Data Tidak Ditemukan");
            }
            
            conn.close();
            s.close();
            
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,""+sqle.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,""+e.getMessage());
        }
        
    }
    
    public void dateNow(){
        
        Date tgl = new Date();
        SimpleDateFormat frm = new SimpleDateFormat("dd-MM-yyyy");
        String dmy = frm.format(tgl);        
        
    }
    
    public int urutanDatabase(){
        
        int jml = 0;
        
        try{
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "SELECT COUNT(*) AS Urutan FROM Retur";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();
            
            while(r.next()){
                jml = r.getInt("Urutan");
            }
            
            conn.close();
            s.close();
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,""+e.getMessage());
        }
        
        return ++jml;
        
    }
    
    public void generateRetur(){
        
        int Urutan = urutanDatabase();
        Date tglJual = new Date();
        SimpleDateFormat frm = new SimpleDateFormat("ddMMyyyy");
        String dmy = frm.format(tglJual);
        String kodeAwal = "DNHR";
        StringBuffer strValues = new StringBuffer();
        strValues.append(kodeAwal);        
        strValues.append(String.valueOf(dmy));        
        strValues.append(String.valueOf(Urutan));
        String result = strValues.toString();
        txtNoRetur.setText(result);
        
    }
    
    public void updateStokBarang(){
        
        int jml = tRetur.getRowCount();
        
        for(int i =0; i < jml; i++){
            
            String product = (String) modelRetur.getValueAt(i, 0);               
            int jmlRetur = Integer.valueOf(String.valueOf(modelRetur.getValueAt(i,3)));
            
            try{      
                
                Connection conn = Koneksi.koneksiDatabase();
                String sql = "UPDATE Barang SET Quantity = (Quantity - '"+jmlRetur+"') WHERE Product = '"+product+"'";
                PreparedStatement s = conn.prepareStatement(sql);
                int r = s.executeUpdate();

                conn.close();
                s.close();
                    
            }catch(SQLException sqle){
                JOptionPane.showMessageDialog(null,""+sqle.getMessage());
            }
        }
        
        JOptionPane.showMessageDialog(null,"Stok Barang Berkurang");
        
    }
    
    public void retur(){
        
        String noRetur = txtNoRetur.getText();
        Date tgl = new Date();
        SimpleDateFormat frm = new SimpleDateFormat("dd-MM-yyyy");
        String dmy = frm.format(tgl);
        String tglRetur = dmy;        
        
            try{
                Connection conn = Koneksi.koneksiDatabase();
                String sql = "INSERT INTO Retur VALUES(?,?)";
                PreparedStatement s = conn.prepareStatement(sql);
                    s.setString(1, tglRetur);
                    s.setString(2, noRetur);
                int r = s.executeUpdate();
                
                JOptionPane.showMessageDialog(null,"Data Retur Telah Disimpan");
                
                conn.close();
                s.close();
                
            }catch(SQLException sqle){
                JOptionPane.showMessageDialog(null,""+sqle.getMessage());
            }
        
    }
    
    public void detailRetur(){
        
        int jml = tRetur.getRowCount();
        
        for(int i=0; i < jml; i++){
            String noRetur = txtNoRetur.getText();
            String noFaktur = txtCariNoFaktur.getText();
            String product = (String) modelRetur.getValueAt(i,0);
            String type = (String) modelRetur.getValueAt(i,1);
            int jmlBeli = Integer.valueOf(String.valueOf(modelRetur.getValueAt(i,2)));
            int jmlRetur = Integer.valueOf(String.valueOf(modelRetur.getValueAt(i,3)));
            String note = (String) modelRetur.getValueAt(i,4);
            
            try{
                Connection conn = Koneksi.koneksiDatabase();
                String sql = "INSERT INTO DetailRetur VALUES(?,?,?,?,?,?,?)";
                PreparedStatement s = conn.prepareStatement(sql);
                    s.setString(1, noRetur);
                    s.setString(2, noFaktur);
                    s.setString(3, product);
                    s.setString(4, type);
                    s.setInt(5, jmlBeli);                
                    s.setInt(6, jmlRetur);
                    s.setString(7, note);
                int r = s.executeUpdate();
            
                if(r>0){
                    //JOptionPane.showMessageDialog(null,"Data Retur Bertambah");
                    txtBarangRetur.setText("");
                    //txtBarangRetur.setEnabled(false);
                    //txtCariNoFaktur.setText("");
                    //txtCariNoFaktur.setEnabled(false);
                    txtNote.setText("");
                    //txtNote.setEnabled(false);
                    cNamaBarang.setSelectedItem("- Select -");
                    bGenerate.setEnabled(true);
                    bRetur.setEnabled(false);
                    bHapus.setEnabled(false);
                    bSimpanKeranjang.setEnabled(false);
                }else{
                    JOptionPane.showMessageDialog(null,"Data Retur Error");
                }
            
                s.close();
                conn.close();                
                
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,""+e.getMessage());
            }
        }        
        JOptionPane.showMessageDialog(null,"Data Detail Retur Berhasil Disimpan");
    }
    
    public void comboBox(){
        
        String noFaktur = txtCariNoFaktur.getText();
                
        try {
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Select Product,Type From DetailPenjualan WHERE NoFaktur = '"+noFaktur+"'";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();                                
                
        while(r.next()){
            cNamaBarang.addItem(r.getString("Type") +" - "+ (r.getString("Product")));                                      
        }
        
        conn.close();
        s.close();
         
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,""+e.getMessage());
        }
        
    }
    
    public void simpanKeranjang(){                
        
            String kode = (String) cNamaBarang.getSelectedItem();        
            String product = kode.substring(7,kode.length());
            String type = kode.substring(0,4);
            int beli = Integer.valueOf(String.valueOf(tFaktur.getValueAt(0,3)));
            int retur = Integer.valueOf(txtBarangRetur.getText());        
            String note = txtNote.getText();        
        
            Object[] data = new Object[5];
            data[0] = product;
            data[1] = type;
            data[2] = beli;
            data[3] = retur;
            data[4] = note;
                
            modelRetur.addRow(data);
        
    }
    
    public void hapusBarisKeranjang(){
        
        int delData = tRetur.getSelectedRow();
        
        if(delData == -1){
            return;
        }else{
            modelRetur.removeRow(delData);            
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bGenerate;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bPrint;
    private javax.swing.JButton bRetur;
    private javax.swing.JButton bSearch;
    private javax.swing.JButton bSimpanKeranjang;
    private javax.swing.JComboBox<String> cNamaBarang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tFaktur;
    private javax.swing.JTable tRetur;
    private javax.swing.JTextField txtBarangRetur;
    private javax.swing.JTextField txtCariNoFaktur;
    private javax.swing.JTextField txtNoRetur;
    private javax.swing.JTextArea txtNote;
    // End of variables declaration//GEN-END:variables
}
