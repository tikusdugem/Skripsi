/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Transaksi;

import Koneksi.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rothem
 */
public class Penjualan extends javax.swing.JFrame {
    
    DefaultTableModel model;

    /**
     * Creates new form Penjualan
     */
    public Penjualan() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Logo/LogoDNetHouse.png")).getImage());        
        setLocationRelativeTo(null);
        comboBox();
        dateNow();
        generateFaktur();
        defaultModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cNamaBarang = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtStockBarang = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtHargaBarang = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotalBeli = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtNoFaktur = new javax.swing.JTextField();
        bGenerate = new javax.swing.JButton();
        bSimpanKeranjang = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tPenjualan = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtTotalBayar = new javax.swing.JTextField();
        bSimpanTransaksi = new javax.swing.JButton();
        bCancel = new javax.swing.JButton();
        bPrint = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Penjualan | Sistem Informasi Penjualan D-Net House");

        jLabel1.setText("DATA BARANG");

        jLabel2.setText("Nama Barang");

        cNamaBarang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -" }));
        cNamaBarang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cNamaBarangItemStateChanged(evt);
            }
        });
        cNamaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cNamaBarangActionPerformed(evt);
            }
        });

        jLabel3.setText("Persediaan Barang");

        txtStockBarang.setEnabled(false);

        jLabel4.setText("Harga");

        txtHargaBarang.setEnabled(false);

        jLabel5.setText("Jumlah Beli");

        txtTotalBeli.setEnabled(false);

        jLabel6.setText("No Penjualan");

        txtNoFaktur.setEnabled(false);

        bGenerate.setText("Tambah Transaksi");
        bGenerate.setEnabled(false);
        bGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGenerateActionPerformed(evt);
            }
        });

        bSimpanKeranjang.setText("Simpan Ke Keranjang");
        bSimpanKeranjang.setEnabled(false);
        bSimpanKeranjang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanKeranjangActionPerformed(evt);
            }
        });

        bHapus.setText("Hapus");
        bHapus.setEnabled(false);
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        tPenjualan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tPenjualan);

        jLabel8.setText("Total Bayar");

        txtTotalBayar.setEnabled(false);

        bSimpanTransaksi.setText("Simpan Transaksi");
        bSimpanTransaksi.setEnabled(false);
        bSimpanTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanTransaksiActionPerformed(evt);
            }
        });

        bCancel.setText("Batal");
        bCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCancelActionPerformed(evt);
            }
        });

        bPrint.setText("Cetak");
        bPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtTotalBeli, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                            .addComponent(txtStockBarang))
                                        .addGap(75, 75, 75)
                                        .addComponent(bSimpanKeranjang)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bHapus)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bCancel))
                                    .addComponent(txtHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNoFaktur)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bPrint)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(bSimpanTransaksi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTotalBayar))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(txtNoFaktur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bGenerate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtStockBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtHargaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtTotalBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bSimpanKeranjang)
                    .addComponent(bHapus)
                    .addComponent(bCancel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTotalBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bSimpanTransaksi)
                    .addComponent(bPrint))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cNamaBarangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cNamaBarangItemStateChanged
        
        String kode = (String) cNamaBarang.getSelectedItem();
        String kodeFix = kode.substring(0,4);
        
        try {
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "SELECT Quantity,HargaAkhir FROM Barang WHERE Type = '" +kodeFix+ "' ";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();                                
                
        while(r.next()){
            txtStockBarang.setText(r.getString("Quantity"));
            txtHargaBarang.setText(r.getString("HargaAkhir"));
        }
        
        conn.close();
        s.close();
         
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,""+e.getMessage());
        }
        
    }//GEN-LAST:event_cNamaBarangItemStateChanged

    private void bSimpanKeranjangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanKeranjangActionPerformed
        simpanKeranjang();
        bSimpanTransaksi.setEnabled(true);
        bHapus.setEnabled(true);
        txtTotalBeli.setText("");
    }//GEN-LAST:event_bSimpanKeranjangActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
        hapusBarisKeranjang();
    }//GEN-LAST:event_bHapusActionPerformed

    private void bSimpanTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanTransaksiActionPerformed
        this.simpanDetailPenjualan();
        this.simpanPenjualan();
        this.updateStokBarang();
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();
        bGenerate.setEnabled(true);
        cNamaBarang.setSelectedItem("- Select -");
        txtHargaBarang.setText("");
        txtStockBarang.setText("");
        txtTotalBeli.setText("");
        txtTotalBayar.setText("");
        txtTotalBeli.setEnabled(false);
        bSimpanTransaksi.setEnabled(false);
        bSimpanKeranjang.setEnabled(false);
        bHapus.setEnabled(false);
        cNamaBarang.setEnabled(false);
    }//GEN-LAST:event_bSimpanTransaksiActionPerformed

    private void bGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGenerateActionPerformed
        this.generateFaktur();
        bGenerate.setEnabled(false);
        cNamaBarang.setEnabled(true);
    }//GEN-LAST:event_bGenerateActionPerformed

    private void cNamaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cNamaBarangActionPerformed
        bSimpanKeranjang.setEnabled(true);                
        txtTotalBeli.setEnabled(true);
    }//GEN-LAST:event_cNamaBarangActionPerformed

    private void bCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCancelActionPerformed
        dispose();
    }//GEN-LAST:event_bCancelActionPerformed

    private void bPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintActionPerformed
        String reportSource;
        Map<String,Object> param = new HashMap<String,Object>();
        param.put("NoFaktur",txtNoFaktur.getText());
        
            try{
                Connection conn = Koneksi.koneksiDatabase();
                reportSource = System.getProperty("user.dir")+"/src/Laporan/FakturPenjualan.jrxml";
                JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport,param,conn);
                JasperViewer.viewReport(jasperPrint,false);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,""+e.getMessage());
            }
    }//GEN-LAST:event_bPrintActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Penjualan().setVisible(true);
            }
        });
    }
    
    public void comboBox(){
                
        try {
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Select Product,Type From Barang";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();                                
                
        while(r.next()){
            cNamaBarang.addItem(r.getString("Type") +" - "+ (r.getString("Product")));                                      
        }
        
        conn.close();
        s.close();
         
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,""+e.getMessage());
        }
        
    }
    
    public void dateNow(){
        
        Date tgl = new Date();
        SimpleDateFormat frm = new SimpleDateFormat("dd-MM-yyyy");
        String dmy = frm.format(tgl);
        
    }
    
    public int urutanDatabase(){
        
        int jml = 0;
        
        try{
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "SELECT COUNT(*) AS Urutan FROM Penjualan";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();
            
            while(r.next()){
                jml = r.getInt("Urutan");
            }
            
            conn.close();
            s.close();
            
        }catch(Exception e){
            e.printStackTrace();
        }
        
        return ++jml;
                
    }
    
    public void generateFaktur(){
        
        int Urutan = urutanDatabase();
        Date tglJual = new Date();
        SimpleDateFormat frm = new SimpleDateFormat("ddMMyyyy");
        String dmy = frm.format(tglJual);
        String kodeAwal = "DNHB";
        StringBuffer strValues = new StringBuffer();
        strValues.append(kodeAwal);        
        strValues.append(String.valueOf(dmy));        
        strValues.append(String.valueOf(Urutan));
        String result = strValues.toString();
        txtNoFaktur.setText(result);
        
    }
    
    public void defaultModel(){
                
        model = new DefaultTableModel();
        tPenjualan.setModel(model);
        model.addColumn("Product");
        model.addColumn("Type");
        model.addColumn("Harga");
        model.addColumn("Total Beli");
        model.addColumn("Subtotal");
        
    }
    
    public void totalBayar(){
               
        int jmlRow = tPenjualan.getRowCount();
        int total = 0;
        
        if(jmlRow == 0){
            return;
        }else{
            for(int i = 0; i < jmlRow; i++){
                int jmlTot = Integer.valueOf((String.valueOf(model.getValueAt(i,4))));
                total += jmlTot;
            }
        }
        
        txtTotalBayar.setText(String.valueOf(total));
        
    }
    
    public void simpanKeranjang(){
        
        String kode = (String) cNamaBarang.getSelectedItem();        
        String product = kode.substring(7,kode.length());
        String type = kode.substring(0,4);
        int harga = Integer.valueOf(txtHargaBarang.getText());
        int jumlah = Integer.valueOf(txtTotalBeli.getText());
        long subTotal = harga * jumlah;
        
        Object[] data = new Object[5];
        data[0] = product;
        data[1] = type;
        data[2] = txtHargaBarang.getText();
        data[3] = txtTotalBeli.getText();
        data[4] = subTotal;
                
        model.addRow(data);
        this.totalBayar();
        
    }
    
    public void hapusBarisKeranjang(){
        
        int delData = tPenjualan.getSelectedRow();
        
        if(delData == -1){
            return;
        }else{
            model.removeRow(delData);
            this.totalBayar();
        }
        
    }
    
    public void simpanPenjualan(){
        
        String noFaktur = txtNoFaktur.getText();
        Date tgl = new Date();
        SimpleDateFormat frm = new SimpleDateFormat("dd-MM-yyyy");
        String dmy = frm.format(tgl);
        String tglJual = dmy;
        
        if(noFaktur.trim().isEmpty()){
            JOptionPane.showMessageDialog(null,"Generate No Faktur Gagal");
        }else{
            try{
                Connection conn = Koneksi.koneksiDatabase();
                String sql = "INSERT INTO Penjualan VALUES(?,?)";
                PreparedStatement s = conn.prepareStatement(sql);
                    s.setString(1, tglJual);
                    s.setString(2, noFaktur);
                int r = s.executeUpdate();
                
                JOptionPane.showMessageDialog(null,"Data Penjualan Telah Disimpan");
                
                conn.close();
                s.close();
                
            }catch(SQLException sqle){
                JOptionPane.showMessageDialog(null,""+sqle.getMessage());
            }
        }
        
    }
    
    public void simpanDetailPenjualan(){
        
        int jml = tPenjualan.getRowCount();
        
        if(jml==0){
            JOptionPane.showMessageDialog(null,"Barang Belum Terpilih");
            return;
        }else{
            for(int i =0; i < jml; i++){
                String noFaktur = txtNoFaktur.getText();
                String product = (String) model.getValueAt(i,0);
                String type = (String) model.getValueAt(i,1);
                int totalBeli = Integer.valueOf(String.valueOf(model.getValueAt(i,3)));
                int subTotal = Integer.valueOf(String.valueOf(model.getValueAt(i,4)));
                String totalBayar = txtTotalBayar.getText();
                
                try{
                    Connection conn = Koneksi.koneksiDatabase();
                    String sql = "INSERT INTO DetailPenjualan VALUES(?,?,?,?,?,?)";
                    PreparedStatement s = conn.prepareStatement(sql);
                        s.setString(1, noFaktur);
                        s.setString(2, product);
                        s.setString(3, type);
                        s.setInt(4, totalBeli);                        
                        s.setInt(5, subTotal);
                        s.setString(6, totalBayar);
                    int r = s.executeUpdate();
                    
                    conn.close();
                    s.close();
                    
                }catch(SQLException sqle){
                    JOptionPane.showMessageDialog(null,""+sqle.getMessage());
                }
            }
        }
        
        JOptionPane.showMessageDialog(null,"Data Detail Penjualan Telah Disimpan");
        
    }
    
    public void updateStokBarang(){
        
        int jml = tPenjualan.getRowCount();
        
        for(int i =0; i < jml; i++){
            
            String product = (String) model.getValueAt(i, 0);               
            int jmlJual = Integer.valueOf(String.valueOf(model.getValueAt(i, 3)));
            
                try{
                    
                    Connection conn = Koneksi.koneksiDatabase();
                    String sql = "UPDATE Barang SET Quantity = (Quantity - '"+jmlJual+"') WHERE Product = '"+product+"'";
                    PreparedStatement s = conn.prepareStatement(sql);
                    int r = s.executeUpdate();                    

                conn.close();
                s.close();
                    
                }catch(SQLException sqle){
                    sqle.printStackTrace();
                }
        }
        
        JOptionPane.showMessageDialog(null,"Data Stok Barang Telah Diupdate");
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCancel;
    private javax.swing.JButton bGenerate;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bPrint;
    private javax.swing.JButton bSimpanKeranjang;
    private javax.swing.JButton bSimpanTransaksi;
    private javax.swing.JComboBox<String> cNamaBarang;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tPenjualan;
    private javax.swing.JTextField txtHargaBarang;
    private javax.swing.JTextField txtNoFaktur;
    private javax.swing.JTextField txtStockBarang;
    private javax.swing.JTextField txtTotalBayar;
    private javax.swing.JTextField txtTotalBeli;
    // End of variables declaration//GEN-END:variables
}
