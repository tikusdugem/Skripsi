/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Transaksi;

import Koneksi.Koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Rothem
 */
public class Konsinyasi extends javax.swing.JFrame {
    
    public DefaultTableModel tabModel,tabModelBarang;

    /**
     * Creates new form Supplier
     */
    public Konsinyasi() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/Logo/LogoDNetHouse.png")).getImage());
        setLocationRelativeTo(null);        
        setJTableBarang();
        setJTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtProduct = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAlamat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTelepon = new javax.swing.JTextField();
        bAdd = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        bClose = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tSupplier = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        txtType = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtJenis = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cProduct = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        tBarang = new javax.swing.JTable();
        bAddBarang = new javax.swing.JButton();
        bHapusBarang = new javax.swing.JButton();
        bPrint = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtHargaAkhir = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        bKeranjang = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Konsinyasi | Sistem Informasi Penjualan D-Net House");

        jLabel1.setText("Produk");

        jLabel2.setText("Nama");

        jLabel3.setText("Alamat");

        jLabel4.setText("Telepon");

        bAdd.setText("Tambah");
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        bDelete.setText("Hapus");
        bDelete.setEnabled(false);
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bClose.setText("Batal");
        bClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCloseActionPerformed(evt);
            }
        });

        tSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tSupplierMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tSupplier);

        jLabel6.setText("Tipe");

        txtType.setEnabled(false);

        jLabel7.setText("Jenis");

        txtJenis.setEnabled(false);

        jLabel8.setText("Jumlah Simpan");

        txtQuantity.setEnabled(false);

        jLabel9.setText("Harga Awal");

        jLabel10.setText("Produk");

        cProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Select -" }));
        cProduct.setEnabled(false);
        cProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cProductActionPerformed(evt);
            }
        });

        tBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tBarangMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tBarang);

        bAddBarang.setText("Tambah");
        bAddBarang.setEnabled(false);
        bAddBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddBarangActionPerformed(evt);
            }
        });

        bHapusBarang.setText("Hapus");
        bHapusBarang.setEnabled(false);
        bHapusBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusBarangActionPerformed(evt);
            }
        });

        bPrint.setText("Print");
        bPrint.setEnabled(false);
        bPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPrintActionPerformed(evt);
            }
        });

        jLabel11.setText("Harga Akhir");

        txtHargaAkhir.setEnabled(false);

        txtHarga.setEnabled(false);
        txtHarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHargaActionPerformed(evt);
            }
        });

        bKeranjang.setText("Simpan Ke Keranjang");
        bKeranjang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bKeranjangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtProduct, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 126, Short.MAX_VALUE)
                        .addComponent(bAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bClose))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHargaAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(bAddBarang)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bHapusBarang)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bPrint))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(120, 120, 120)
                                        .addComponent(bKeranjang))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(bAdd)
                    .addComponent(bDelete)
                    .addComponent(bClose))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtHargaAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bKeranjang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bHapusBarang)
                            .addComponent(bPrint)
                            .addComponent(bAddBarang))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        tambahData();
        //setJTable();        
        comboBox();
        cProduct.setEnabled(true);
    }//GEN-LAST:event_bAddActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        deleteData();
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCloseActionPerformed
        dispose();
    }//GEN-LAST:event_bCloseActionPerformed

    private void tSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tSupplierMouseClicked
        bDelete.setEnabled(true);
        //bEdit.setEnabled(true);
    }//GEN-LAST:event_tSupplierMouseClicked

    private void bAddBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddBarangActionPerformed
        simpanBarangKonsinyasi();
        //tambahDataBarang();
        bPrint.setEnabled(true);
    }//GEN-LAST:event_bAddBarangActionPerformed

    private void bHapusBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusBarangActionPerformed
        deleteDataBarang();
    }//GEN-LAST:event_bHapusBarangActionPerformed

    private void cProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cProductActionPerformed
        //setJTableBarang();
        txtType.setEnabled(true);
        txtJenis.setEnabled(true);
        txtQuantity.setEnabled(true);
        txtHarga.setEnabled(true);
        txtHargaAkhir.setEnabled(true);
        bAddBarang.setEnabled(true);
    }//GEN-LAST:event_cProductActionPerformed

    private void tBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tBarangMouseClicked
        //bEditBarang.setEnabled(true);
        bHapusBarang.setEnabled(true);
    }//GEN-LAST:event_tBarangMouseClicked

    private void bKeranjangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bKeranjangActionPerformed
        simpanKeranjang();
    }//GEN-LAST:event_bKeranjangActionPerformed

    private void bPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPrintActionPerformed
        String reportSource;
        Map<String,Object> param = new HashMap<String,Object>();
        param.put("Product",cProduct.getSelectedItem());
        
            try{
                Connection conn = Koneksi.koneksiDatabase();
                reportSource = System.getProperty("user.dir")+"/src/Laporan/FakturKonsinyasi.jrxml";
                JasperReport jasperReport = JasperCompileManager.compileReport(reportSource);
                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport,param,conn);
                JasperViewer.viewReport(jasperPrint,false);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,""+e.getMessage());
            }
    }//GEN-LAST:event_bPrintActionPerformed

    private void txtHargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHargaActionPerformed
        sidang();
    }//GEN-LAST:event_txtHargaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Konsinyasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Konsinyasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Konsinyasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Konsinyasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Konsinyasi().setVisible(true);
            }
        });
    }
    
    public void sidang(){
        
        int harga = Integer.valueOf(txtHarga.getText());
        int hargaA = Integer.valueOf(txtHarga.getText());
        double a = harga*0.5;
        double konversi = harga+a;
        
        if(harga > 0.5){
            txtHargaAkhir.setText(String.valueOf(konversi));
        }
        
    }
    
    private void getData(){
        
        try{
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Select * From Supplier";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();
            
            String Product,Nama,Alamat,Telepon;
            while(r.next()){
            Product = r.getString("Product");
            Nama = r.getString("Nama");
            Alamat = r.getString("Alamat");
            Telepon = r.getString("Telepon");
                        
            Object Data[] = {Product,Nama,Alamat,Telepon};
            tabModel.addRow(Data);
            }
            
            s.close();
            conn.close();
            
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,"" +sqle.getMessage());        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"" +e.getMessage());
        }
        
    }
    
    private void setJTable(){
        
        String [] JudulKolom = {"Product","Nama","Alamat","Telepon"};
        tabModel = new DefaultTableModel(null,JudulKolom){
            boolean[] canEdit = new boolean[] {false,false,false,false};
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return canEdit[columnIndex];
            }
        };
        tSupplier.setModel(tabModel);
        tSupplier.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tSupplier.getColumnModel().getColumn(0).setPreferredWidth(100);
        tSupplier.getColumnModel().getColumn(1).setPreferredWidth(100);
        tSupplier.getColumnModel().getColumn(2).setPreferredWidth(100);
        tSupplier.getColumnModel().getColumn(3).setPreferredWidth(100);
                
        getData();
        
    }
    
    public void tambahData(){
        
        try{
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Insert into Supplier values(?,?,?,?)";
            PreparedStatement s = conn.prepareStatement(sql);
                s.setString(1, txtProduct.getText());
                s.setString(2, txtNama.getText());
                s.setString(3, txtAlamat.getText());
                s.setString(4, txtTelepon.getText());
            int r = s.executeUpdate();
            
            if(r>0){
                JOptionPane.showMessageDialog(null,"Tambah Data Supplier Berhasil");
                setJTable();
            }
            
            s.close();
            conn.close();
            
            txtProduct.setText("");
            txtNama.setText("");            
            txtAlamat.setText("");
            txtTelepon.setText("");
                       
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,"" +sqle.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"" +e.getMessage());
        }
    }
    
    public void takeDataJTable(){
        
        int row = tSupplier.getSelectedRow();

        String Product, Nama, Alamat, Telepon;
        Product = tabModel.getValueAt(row, 0).toString();        
        Nama = tabModel.getValueAt(row, 1).toString();        
        Alamat = tabModel.getValueAt(row, 2).toString();
        Telepon = tabModel.getValueAt(row, 3).toString();        
            
        txtProduct.setText(Product);
        txtNama.setText(Nama);        
        txtAlamat.setText(Alamat);
        txtTelepon.setText(Telepon);        
        
    }
    
    public void deleteJTable(){
        
        int row = tabModel.getRowCount();
        
        for(int i=0;i<row;i++){
            tabModel.removeRow(0);
        }

    }
    
    public void showDataJTable(){        
        
        deleteJTable();
                
        try {            
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Select * from Supplier";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();
            
            String Product, Nama, Alamat, Telepon;
            while(r.next()){
            Product = r.getString("Product");
            Nama = r.getString("Nama");            
            Alamat = r.getString("Alamat");
            Telepon = r.getString("Telepon");            
            
            Object Data[] = {Product,Nama,Alamat,Telepon};
            tabModel.addRow(Data);
            }
            
            s.close();
            conn.close();
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,""+e.getMessage());    
        }

    }
    
    public void deleteData(){
        
        takeDataJTable();
        
        try {
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "DELETE FROM Supplier WHERE Product = ?";
            PreparedStatement s = conn.prepareStatement(sql);
                s.setString(1, txtProduct.getText());
            int r = s.executeUpdate();
            
            if(r>0){
            JOptionPane.showMessageDialog(this,"Data Sudah dihapus");
            deleteJTable();
            getData();
            }
            
            s.close();
            conn.close();
            
            txtProduct.setText("");
            txtNama.setText("");            
            txtAlamat.setText("");
            txtTelepon.setText("");            
        
        }catch(Exception e){
         JOptionPane.showMessageDialog(this,"" +e.getMessage());
        }
        
    }
    
    public void editData(){
        
        try{
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "UPDATE Supplier SET Nama=?,Alamat=?,Telepon=? WHERE Product=?";
            PreparedStatement s = conn.prepareStatement(sql);                
                s.setString(1, txtNama.getText());
                s.setString(2, txtAlamat.getText());
                s.setString(3, txtTelepon.getText());                
                s.setString(4, txtProduct.getText());
            int r = s.executeUpdate();
            
            deleteJTable();
            getData();
            
            JOptionPane.showMessageDialog(null,"Edit Berhasil");
            
            s.close();
            conn.close();
                      
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,"" +sqle.getMessage());                       
        }
        
    }
    
    // Barang Konsinyasi
    
    private void getDataBarang(){
        
        try{
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Select * From Barang";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();
            
            String Product,Type,Jenis,Quantity,Harga,HargaAkhir;
            while(r.next()){            
            Product = r.getString("Product");
            Type = r.getString("Type");
            Jenis = r.getString("Jenis");
            Quantity = r.getString("Quantity");
            Harga = r.getString("Harga");
            HargaAkhir = r.getString("HargaAkhir");
                        
            Object Data[] = {Product,Type,Jenis,Quantity,Harga,HargaAkhir};
            tabModelBarang.addRow(Data);
            }
            
            s.close();
            conn.close();
            
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,"" +sqle.getMessage());        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Koneksi Access Gagal");
        }
        
    }       
    
    public void simpanKeranjang(){
        if(Integer.valueOf(txtHargaAkhir.getText()) > Integer.valueOf(txtHarga.getText())){
                    
        String Product = (String) cProduct.getSelectedItem();
        String Type = txtType.getText();
        String Jenis = txtJenis.getText();
        int Quantity = Integer.valueOf(txtQuantity.getText());
        int Harga = Integer.valueOf(txtHarga.getText());
        int HargaAkhir = Integer.valueOf(txtHargaAkhir.getText());        
        
        Object[] data = new Object[6];
        data[0] = Product;
        data[1] = Type;
        data[2] = Jenis;
        data[3] = Quantity;
        data[4] = Harga;
        data[5] = HargaAkhir;
                
        tabModelBarang.addRow(data);

        }else{
            JOptionPane.showMessageDialog(null,"a");
            return;
        }
        
    }
    
    private void setJTableBarang(){
        
        String [] JudulKolom = {"Product","Type","Jenis","Quantity","Harga","Harga Akhir"};
        tabModelBarang = new DefaultTableModel(null,JudulKolom){
            boolean[] canEdit = new boolean[] {false,false,false,false,false,false};
            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex){
                return canEdit[columnIndex];
            }
        };
        tBarang.setModel(tabModelBarang);
        tBarang.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        tBarang.getColumnModel().getColumn(0).setPreferredWidth(100);
        tBarang.getColumnModel().getColumn(1).setPreferredWidth(100);
        tBarang.getColumnModel().getColumn(2).setPreferredWidth(100);
        tBarang.getColumnModel().getColumn(3).setPreferredWidth(100);
        tBarang.getColumnModel().getColumn(4).setPreferredWidth(100);
        tBarang.getColumnModel().getColumn(5).setPreferredWidth(100);
                
        //getDataBarang();
        
    }
    
    public void simpanBarangKonsinyasi(){
        
        int jml = tBarang.getRowCount();
        
        if(jml==0){
            JOptionPane.showMessageDialog(null,"Barang Belum Terpilih");
            return;
        }else{
            for(int i =0; i < jml; i++){                
                String Product = (String) tabModelBarang.getValueAt(i,0);
                String Type = (String) tabModelBarang.getValueAt(i,1);
                String Jenis = (String) tabModelBarang.getValueAt(i,2);
                int Quantity = Integer.valueOf(String.valueOf(tabModelBarang.getValueAt(i,3)));
                int Harga = Integer.valueOf(String.valueOf(tabModelBarang.getValueAt(i,4)));
                int HargaAkhir = Integer.valueOf(String.valueOf(tabModelBarang.getValueAt(i,5)));
                
                try{
                    Connection conn = Koneksi.koneksiDatabase();
                    String sql = "INSERT INTO Barang VALUES(?,?,?,?,?,?)";
                    PreparedStatement s = conn.prepareStatement(sql);
                        s.setString(1, Product);
                        s.setString(2, Type);
                        s.setString(3, Jenis);
                        s.setInt(4, Quantity);                        
                        s.setInt(5, Harga);
                        s.setInt(6, HargaAkhir);
                    int r = s.executeUpdate();
                    
                    conn.close();
                    s.close();
                    
                }catch(SQLException sqle){
                    JOptionPane.showMessageDialog(null,""+sqle.getMessage());
                }
            }
        }
        
        JOptionPane.showMessageDialog(null,"Data Barang Telah Disimpan");
        
    }
    
    public void tambahDataBarang(){
        
        try{
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Insert into Barang values(?,?,?,?,?,?)";
            PreparedStatement s = conn.prepareStatement(sql);                
                s.setString(1, (String) cProduct.getSelectedItem());
                s.setString(2, txtType.getText());
                s.setString(3, txtJenis.getText());
                s.setString(4, txtQuantity.getText());
                s.setString(5, txtHarga.getText());
                s.setString(6, txtHargaAkhir.getText());
            int r = s.executeUpdate();
            
            if(r>0){
                JOptionPane.showMessageDialog(null,"Tambah Data Barang Berhasil");
                //setJTableBarang();
            }
            
            s.close();
            conn.close();
                        
            txtType.setText("");
            txtJenis.setText("");
            txtQuantity.setText("");
            txtHarga.setText("");
            txtHargaAkhir.setText("");
            cProduct.setSelectedItem("- Select -");
                       
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,"" +sqle.getMessage());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"" +e.getMessage());
        }
    }
    
    public void comboBox(){
        
        try {
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Select Product from Supplier";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();                                
                
        while(r.next()){
            cProduct.addItem(r.getString("Product"));                                      
        }
        
        conn.close();
        s.close();
         
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        
    }
    
    public void takeDataJTableBarang(){
        
        int row = tBarang.getSelectedRow();

        String Product, Type, Jenis, Quantity, Harga, HargaAkhir;
        Product = tabModelBarang.getValueAt(row, 0).toString();        
        Type = tabModelBarang.getValueAt(row, 1).toString();        
        Jenis = tabModelBarang.getValueAt(row, 2).toString();
        Quantity = tabModelBarang.getValueAt(row, 3).toString();
        Harga = tabModelBarang.getValueAt(row, 4).toString();
        HargaAkhir = tabModelBarang.getValueAt(row, 5).toString();
            
        cProduct.setSelectedItem(Product);
        txtType.setText(Type);        
        txtJenis.setText(Jenis);
        txtQuantity.setText(Quantity);
        txtHarga.setText(Harga);
        txtHargaAkhir.setText(HargaAkhir);
        
    }
    
    public void deleteJTableBarang(){
        
        int row = tabModelBarang.getRowCount();
        
        for(int i=0;i<row;i++){
            tabModelBarang.removeRow(0);
        }

    }
    
    public void showDataJTableBarang(){        
        
        deleteJTableBarang();
                
        try {            
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "Select * from Barang";
            PreparedStatement s = conn.prepareStatement(sql);
            ResultSet r = s.executeQuery();
            
            String Product, Type, Jenis, Quantity, Harga, HargaAkhir;
            while(r.next()){
            Product = r.getString("Product");
            Type = r.getString("Type");
            Jenis = r.getString("Jenis");
            Quantity = r.getString("Quantity");
            Harga = r.getString("Harga");
            HargaAkhir = r.getString("HargaAkhir");
            
            Object Data[] = {Product,Type,Jenis,Quantity,Harga,HargaAkhir};
            tabModelBarang.addRow(Data);
            }
            
            s.close();
            conn.close();
            
        }catch (Exception e){
            JOptionPane.showMessageDialog(null,""+e.getMessage());    
        }

    }
    
    public void deleteDataBarang(){
        
        int delData = tBarang.getSelectedRow();
        
        if(delData == -1){
            return;
        }else{
            tabModelBarang.removeRow(delData);
            //this.totalBayar();
        }
        
        /*takeDataJTableBarang();
        
        try {
            
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "DELETE FROM Barang WHERE Type = ?";
            PreparedStatement s = conn.prepareStatement(sql);
                s.setString(1, txtType.getText());
            int r = s.executeUpdate();
            
            if(r>0){
            JOptionPane.showMessageDialog(this,"Data Sudah dihapus");
            deleteJTableBarang();
            getDataBarang();
            }
            
            s.close();
            conn.close();
            
            txtType.setText("");
            txtJenis.setText("");
            txtQuantity.setText("");
            txtHarga.setText("");
            txtHargaAkhir.setText("");
            cProduct.setSelectedItem("- Select -");
        
        }catch(Exception e){
         JOptionPane.showMessageDialog(this,"" +e.getMessage());
        }*/
        
    }
    
    public void editDataBarang(){
        
        try{
            Connection conn = Koneksi.koneksiDatabase();
            String sql = "UPDATE Barang SET Type=?,Jenis=?,Quantity=?,Harga=?,HargaAkhir=? where Product=?";
            PreparedStatement s = conn.prepareStatement(sql);                
                s.setString(1, txtType.getText());
                s.setString(2, txtJenis.getText());
                s.setString(3, txtQuantity.getText());
                s.setString(4, txtHarga.getText());
                s.setString(5, txtHargaAkhir.getText());
                s.setString(6, (String) cProduct.getSelectedItem());
            int r = s.executeUpdate();
            
            deleteJTableBarang();
            getDataBarang();
            
            JOptionPane.showMessageDialog(null,"Edit Berhasil");
            
            s.close();
            conn.close();
                      
        }catch(SQLException sqle){
            JOptionPane.showMessageDialog(null,"" +sqle.getMessage());                       
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bAddBarang;
    private javax.swing.JButton bClose;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bHapusBarang;
    private javax.swing.JButton bKeranjang;
    private javax.swing.JButton bPrint;
    private javax.swing.JComboBox<String> cProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tBarang;
    private javax.swing.JTable tSupplier;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtHargaAkhir;
    private javax.swing.JTextField txtJenis;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtProduct;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTelepon;
    private javax.swing.JTextField txtType;
    // End of variables declaration//GEN-END:variables
}
